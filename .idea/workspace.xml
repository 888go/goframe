<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="fdbfa3a1-a971-447c-8231-bccb5bc7c74c" name="更改" comment="2024-05-22">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/container/garray/garray_normal_any.go" beforeDir="false" afterPath="$PROJECT_DIR$/container/garray/garray_normal_any.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/container/gvar/gvar_z_unit_basic_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/container/gvar/gvar_z_unit_basic_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contrib/drivers/mssql/mssql.go" beforeDir="false" afterPath="$PROJECT_DIR$/contrib/drivers/mssql/mssql.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contrib/drivers/mysql/mysql.go" beforeDir="false" afterPath="$PROJECT_DIR$/contrib/drivers/mysql/mysql.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contrib/drivers/pgsql/pgsql.go" beforeDir="false" afterPath="$PROJECT_DIR$/contrib/drivers/pgsql/pgsql.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contrib/drivers/pgsql/pgsql_result.go" beforeDir="false" afterPath="$PROJECT_DIR$/contrib/drivers/pgsql/pgsql_result.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contrib/drivers/sqlite/sqlite.go" beforeDir="false" afterPath="$PROJECT_DIR$/contrib/drivers/sqlite/sqlite.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/database/gdb/gdb_core.go" beforeDir="false" afterPath="$PROJECT_DIR$/database/gdb/gdb_core.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/database/gdb/gdb_core_config.go" beforeDir="false" afterPath="$PROJECT_DIR$/database/gdb/gdb_core_config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/database/gdb/gdb_core_structure.go" beforeDir="false" afterPath="$PROJECT_DIR$/database/gdb/gdb_core_structure.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/database/gdb/gdb_core_transaction.go" beforeDir="false" afterPath="$PROJECT_DIR$/database/gdb/gdb_core_transaction.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/database/gdb/gdb_core_underlying.go" beforeDir="false" afterPath="$PROJECT_DIR$/database/gdb/gdb_core_underlying.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/database/gdb/gdb_core_utility.go" beforeDir="false" afterPath="$PROJECT_DIR$/database/gdb/gdb_core_utility.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/database/gdb/gdb_driver_default.go" beforeDir="false" afterPath="$PROJECT_DIR$/database/gdb/gdb_driver_default.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/database/gdb/gdb_driver_wrapper_db.go" beforeDir="false" afterPath="$PROJECT_DIR$/database/gdb/gdb_driver_wrapper_db.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/database/gdb/gdb_model.go" beforeDir="false" afterPath="$PROJECT_DIR$/database/gdb/gdb_model.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/database/gdb/gdb_schema.go" beforeDir="false" afterPath="$PROJECT_DIR$/database/gdb/gdb_schema.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/encoding/gcharset/gcharset.go" beforeDir="false" afterPath="$PROJECT_DIR$/encoding/gcharset/gcharset.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/net/gudp/gudp_z_example_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/net/gudp/gudp_z_example_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/os/gcache/gcache_adapter_memory.go" beforeDir="false" afterPath="$PROJECT_DIR$/os/gcache/gcache_adapter_memory.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/os/gcache/gcache_adapter_redis.go" beforeDir="false" afterPath="$PROJECT_DIR$/os/gcache/gcache_adapter_redis.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/os/glog/glog_logger_api.go" beforeDir="false" afterPath="$PROJECT_DIR$/os/glog/glog_logger_api.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/os/glog/glog_logger_handler.go" beforeDir="false" afterPath="$PROJECT_DIR$/os/glog/glog_logger_handler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/os/gsession/gsession_storage_base.go" beforeDir="false" afterPath="$PROJECT_DIR$/os/gsession/gsession_storage_base.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/util/gmeta/gmeta.go" beforeDir="false" afterPath="$PROJECT_DIR$/util/gmeta/gmeta.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/util/gutil/gutil_goroutine.go" beforeDir="false" afterPath="$PROJECT_DIR$/util/gutil/gutil_goroutine.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/util/gvalid/gvalid_error.go" beforeDir="false" afterPath="$PROJECT_DIR$/util/gvalid/gvalid_error.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译.rar" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数.rar" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/container/gvar/gvar_z_unit_basic_test_package.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/contrib/drivers/mssql/mssql_方法.md" beforeDir="false" afterPath="$PROJECT_DIR$/翻译/函数/contrib/drivers/mssql/mssql_方法.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/contrib/drivers/mysql/mysql_方法.md" beforeDir="false" afterPath="$PROJECT_DIR$/翻译/函数/contrib/drivers/mysql/mysql_方法.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/contrib/drivers/pgsql/pgsql_result_方法.md" beforeDir="false" afterPath="$PROJECT_DIR$/翻译/函数/contrib/drivers/pgsql/pgsql_result_方法.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/contrib/drivers/pgsql/pgsql_方法.md" beforeDir="false" afterPath="$PROJECT_DIR$/翻译/函数/contrib/drivers/pgsql/pgsql_方法.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/contrib/drivers/sqlite/sqlite_方法.md" beforeDir="false" afterPath="$PROJECT_DIR$/翻译/函数/contrib/drivers/sqlite/sqlite_方法.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/database/gdb/gdb_core_config_方法.md" beforeDir="false" afterPath="$PROJECT_DIR$/翻译/函数/database/gdb/gdb_core_config_方法.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/database/gdb/gdb_core_structure_方法.md" beforeDir="false" afterPath="$PROJECT_DIR$/翻译/函数/database/gdb/gdb_core_structure_方法.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/database/gdb/gdb_core_transaction_方法.md" beforeDir="false" afterPath="$PROJECT_DIR$/翻译/函数/database/gdb/gdb_core_transaction_方法.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/database/gdb/gdb_core_underlying_方法.md" beforeDir="false" afterPath="$PROJECT_DIR$/翻译/函数/database/gdb/gdb_core_underlying_方法.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/database/gdb/gdb_core_utility_方法.md" beforeDir="false" afterPath="$PROJECT_DIR$/翻译/函数/database/gdb/gdb_core_utility_方法.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/database/gdb/gdb_core_方法.md" beforeDir="false" afterPath="$PROJECT_DIR$/翻译/函数/database/gdb/gdb_core_方法.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/database/gdb/gdb_driver_default_方法.md" beforeDir="false" afterPath="$PROJECT_DIR$/翻译/函数/database/gdb/gdb_driver_default_方法.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/database/gdb/gdb_driver_wrapper_db_方法.md" beforeDir="false" afterPath="$PROJECT_DIR$/翻译/函数/database/gdb/gdb_driver_wrapper_db_方法.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/database/gdb/gdb_model_方法.md" beforeDir="false" afterPath="$PROJECT_DIR$/翻译/函数/database/gdb/gdb_model_方法.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/database/gdb/gdb_schema_方法.md" beforeDir="false" afterPath="$PROJECT_DIR$/翻译/函数/database/gdb/gdb_schema_方法.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/database/gdb/gdb_其他.md" beforeDir="false" afterPath="$PROJECT_DIR$/翻译/函数/database/gdb/gdb_其他.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/encoding/gcharset/gcharset_package.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/net/gudp/gudp_z_example_test_package.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/os/gcache/gcache_adapter_memory_方法.md" beforeDir="false" afterPath="$PROJECT_DIR$/翻译/函数/os/gcache/gcache_adapter_memory_方法.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/os/gcache/gcache_adapter_redis_方法.md" beforeDir="false" afterPath="$PROJECT_DIR$/翻译/函数/os/gcache/gcache_adapter_redis_方法.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/os/glog/glog_logger_api_方法.md" beforeDir="false" afterPath="$PROJECT_DIR$/翻译/函数/os/glog/glog_logger_api_方法.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/os/glog/glog_logger_handler_其他.md" beforeDir="false" afterPath="$PROJECT_DIR$/翻译/函数/os/glog/glog_logger_handler_其他.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/os/gsession/gsession_storage_base_方法.md" beforeDir="false" afterPath="$PROJECT_DIR$/翻译/函数/os/gsession/gsession_storage_base_方法.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/util/gmeta/gmeta_package.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/翻译/函数/util/gvalid/gvalid_error_其他.md" beforeDir="false" afterPath="$PROJECT_DIR$/翻译/函数/util/gvalid/gvalid_error_其他.md" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CoverageOptionsProvider">
    <option name="myAddOrReplace" value="1" />
    <option name="myActivateViewOnRun" value="false" />
  </component>
  <component name="GOROOT" url="file://C:/Go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoVcsConfiguration">
    <option name="GO_FMT" value="false" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="ProjectErrors" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2dEKpNJ1fnZlxZ3zxrMRsCmrTM3" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "Go 测试.github.com/gogf/gf/v2/debug/gdebug 中的 Test_CallerFileLine.executor": "Run",
    "Go 测试.github.com/gogf/gf/v2/debug/gdebug 中的 Test_CallerFileLineShort.executor": "Run",
    "Go 测试.github.com/gogf/gf/v2/os/gfpool 中的 TestOpenErr.executor": "Run",
    "Go 测试.go test container.executor": "Coverage",
    "Go 测试.go test goframe.executor": "Coverage",
    "Go 测试.go test gproc.executor": "Coverage",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.automatic.dependencies.download": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "git-widget-placeholder": "main",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "ignore.virus.scanning.warn.message": "true",
    "last_opened_file_path": "E:/SVN/GO/code/goframe",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "run.code.analysis.last.selected.profile": "pProject Default",
    "settings.editor.selected.configurable": "cn.yiiguxing.plugin.translate"
  }
}]]></component>
  <component name="RunManager" selected="Go 测试.go test goframe">
    <configuration name="github.com/gogf/gf/v2/debug/gdebug 中的 Test_CallerFileLineShort" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="goframe" />
      <working_directory value="$PROJECT_DIR$/debug/gdebug" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/gogf/gf/v2/debug/gdebug" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_CallerFileLineShort\E$" />
      <method v="2" />
    </configuration>
    <configuration name="github.com/gogf/gf/v2/os/gfpool 中的 TestOpenErr" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="goframe" />
      <working_directory value="$PROJECT_DIR$/os/gfpool" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/gogf/gf/v2/os/gfpool" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestOpenErr\E$" />
      <method v="2" />
    </configuration>
    <configuration name="go test container" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="goframe" />
      <working_directory value="$PROJECT_DIR$/container" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="github.com/gogf/gf/v2/container" />
      <directory value="$PROJECT_DIR$/container" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="go test goframe" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="goframe" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="github.com/gogf/gf/v2" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="go test gproc" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="goframe" />
      <working_directory value="$PROJECT_DIR$/os/gproc" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="github.com/gogf/gf/v2/os/gproc" />
      <directory value="$PROJECT_DIR$/os/gproc" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go 测试.go test goframe" />
        <item itemvalue="Go 测试.go test gproc" />
        <item itemvalue="Go 测试.github.com/gogf/gf/v2/os/gfpool 中的 TestOpenErr" />
        <item itemvalue="Go 测试.go test container" />
        <item itemvalue="Go 测试.github.com/gogf/gf/v2/debug/gdebug 中的 Test_CallerFileLineShort" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-2946fb9b3188-155fe4b6e3a0-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-233.15026.17" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT" value="false" />
    <option name="CHECK_NEW_TODO" value="false" />
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="2024-03-05" />
    <MESSAGE value="第一版" />
    <MESSAGE value="2024-05-20 重新换回完整版" />
    <MESSAGE value="2024-05-22" />
    <option name="LAST_COMMIT_MESSAGE" value="2024-05-22" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/gset/gset_any_set.go</url>
          <line>19</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/gtype/gtype_interface.go</url>
          <line>18</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/gmap/gmap_hash_int_str_map.go</url>
          <line>16</line>
          <option name="timeStamp" value="4" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/genv/genv.go</url>
          <line>93</line>
          <option name="timeStamp" value="5" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/genv/genv.go</url>
          <line>96</line>
          <option name="timeStamp" value="6" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/genv/genv.go</url>
          <line>98</line>
          <option name="timeStamp" value="7" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/genv/genv_z_unit_test.go</url>
          <line>119</line>
          <option name="timeStamp" value="10" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/genv/genv_z_unit_test.go</url>
          <line>128</line>
          <option name="timeStamp" value="11" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/garray/garray_normal_int.go</url>
          <line>453</line>
          <option name="timeStamp" value="12" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="GoTestRunConfiguration">
        <watch expression="测试" />
        <watch expression="测试" />
      </configuration>
    </watches-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/goframe$go_test_garray.out" NAME="go test garray 覆盖结果" MODIFIED="1709997161237" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gpool.out" NAME="go test gpool 覆盖结果" MODIFIED="1709651370780" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gcfg.out" NAME="go test gcfg 覆盖结果" MODIFIED="1709611825054" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gmutex.out" NAME="go test gmutex 覆盖结果" MODIFIED="1709997424376" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_container.out" NAME="go test container 覆盖结果" MODIFIED="1716219401696" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gaes.out" NAME="go test gaes 覆盖结果" MODIFIED="1709997099857" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gproc.out" NAME="go test gproc 覆盖结果" MODIFIED="1716257400341" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_genv.out" NAME="go test genv 覆盖结果" MODIFIED="1709607866909" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gtype.out" NAME="go test gtype 覆盖结果" MODIFIED="1709997486315" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gctx.out" NAME="go test gctx 覆盖结果" MODIFIED="1709997308422" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gutil.out" NAME="go test gutil 覆盖结果" MODIFIED="1709997560045" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_grand.out" NAME="go test grand 覆盖结果" MODIFIED="1709997428386" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_glog.out" NAME="go test glog 覆盖结果" MODIFIED="1709612001777" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gconv.out" NAME="go test gconv 覆盖结果" MODIFIED="1709940828940" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gbase64.out" NAME="go test gbase64 覆盖结果" MODIFIED="1709997163334" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$github_com_888go_goframe_garray__TestStrArray_Merge.out" NAME="github.com/888go/goframe/garray 中的 TestStrArray_Merge 覆盖结果" MODIFIED="1709653044083" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_guid.out" NAME="go test guid 覆盖结果" MODIFIED="1709997488179" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gdes.out" NAME="go test gdes 覆盖结果" MODIFIED="1709997314099" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$github_com_888go_goframe_genv__Test_GetWithCmd.out" NAME="github.com/888go/goframe/genv 中的 Test_GetWithCmd 覆盖结果" MODIFIED="1709608578712" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gclient.out" NAME="go test gclient 覆盖结果" MODIFIED="1709940400528" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gcache.out" NAME="go test gcache 覆盖结果" MODIFIED="1709612089219" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gmlock.out" NAME="go test gmlock 覆盖结果" MODIFIED="1709997371009" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gurl.out" NAME="go test gurl 覆盖结果" MODIFIED="1709997550410" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gtime.out" NAME="go test gtime 覆盖结果" MODIFIED="1709997482677" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gjson.out" NAME="go test gjson 覆盖结果" MODIFIED="1709997363905" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gvar.out" NAME="go test gvar 覆盖结果" MODIFIED="1709997563434" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gview.out" NAME="go test gview 覆盖结果" MODIFIED="1709997565682" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_goframe.out" NAME="go test goframe 覆盖结果" MODIFIED="1717142349393" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gfile.out" NAME="go test gfile 覆盖结果" MODIFIED="1709997318761" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gtimer.out" NAME="go test gtimer 覆盖结果" MODIFIED="1709997484566" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gstr.out" NAME="go test gstr 覆盖结果" MODIFIED="1709997447443" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gregex.out" NAME="go test gregex 覆盖结果" MODIFIED="1709997431094" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gmd5.out" NAME="go test gmd5 覆盖结果" MODIFIED="1709997368497" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gcmd.out" NAME="go test gcmd 覆盖结果" MODIFIED="1709940773956" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gview__1_.out" NAME="go test gview (1) 覆盖结果" MODIFIED="1709942210634" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gqueue.out" NAME="go test gqueue 覆盖结果" MODIFIED="1709997426250" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gmap.out" NAME="go test gmap 覆盖结果" MODIFIED="1709997366209" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gcrc32.out" NAME="go test gcrc32 覆盖结果" MODIFIED="1709997168194" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gcompress.out" NAME="go test gcompress 覆盖结果" MODIFIED="1709997165626" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gini.out" NAME="go test gini 覆盖结果" MODIFIED="1709997323156" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gset.out" NAME="go test gset 覆盖结果" MODIFIED="1709997443272" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_ghtml.out" NAME="go test ghtml 覆盖结果" MODIFIED="1709997320895" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gmap__1_.out" NAME="go test gmap (1) 覆盖结果" MODIFIED="1709941598534" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$go_test_gsha1.out" NAME="go test gsha1 覆盖结果" MODIFIED="1709997445194" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/goframe$gocheck_gmlock.out" NAME="gocheck gmlock 覆盖结果" MODIFIED="1709612135762" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>